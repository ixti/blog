---
title: LogÂ­ging method name with Log4Net
author: Aleksey V Zapparov AKA ixti
date: 17/11/2009
category: development
tags: log4net, logging, tracing

I totally dislike to code in any proprietary language or using any proprietary technology. But due to my job I need to deal with them, for get my work done for my employer. So for logging in <a href="http://google.com/search?q=don't+depend+on+mono">.net or mono</a> I use <a href="http://logging.apache.org/log4net/">log4net</a>. And sometimes, for debugging purposes, I need to know which method raised log event.

~


With log4net it can be done by simply editing PatternLayout's format string. Be aware as showing method name slows down performance. So you should use it ONLY when you really need it at development stage only. Here are some interesting variables for string format:

<blockquote>
<b>%F</b>
Used to output the file name where the logging request was issued

<b>%L</b>
Used to output the line number from where the logging request was issued

<b>%M</b>
Used to output the method name where the logging request was issued

<b>%C</b>
Used to output the fully qualified class name of the caller issuing the logging request. This conversion specifier can be optionally followed by precision specifier, that is a decimal constant in brackets. If a precision specifier is given, then only the corresponding number of right most components of the class name will be printed. By default the class name is output in fully qualified form.
For example, for the class name "log4net.Layout.PatternLayout", the pattern %C{1} will output "PatternLayout".
</blockquote>

You can find more in <a href="http://logging.apache.org/log4net/release/sdk/log4net.Layout.PatternLayout.html">PatternLayout's SDK</a>.

Alternatively you can use ThreadContext stack pushing which consume nothing in comparison to PatternLayout format. In fact I'm not sure is that really needed in real life as I can't imagine when method name is important on production stage. Anyway here is an example:
<pre lang="c#">
using log4net;
// ...
private static ILog log = LogManager.GetLogger("UselessCrap");
// ...
public void DoSomethingUsefull()
{
    using (ThreadContext.Stacks["MethodName"].Puch("DoComethingUsefull")) {
        log.Warn("But I can't! I'm totally useless!");
        log.Info("Use Scala, Luke! (c)");
    }
}
// ...
</pre>
