--- 
title: What is so cool about Node.JS?
category: development
tags: node.js, benchmark, io, async, sync
date: 07/08/2011

Some time ago I was really very excited about [Node.JS]. About all that
marketing bullshit about asynchronous (on a single core) execution and so on.
I'm not gonna start another holy-war - let's leave it for rusty (in it's most)
Node.JS community, keenly responsive to any alternative idea, just like holy
inquisition. Instead, a friend of mine (_Hi, MBG!_) and I made some benchmarks
of most interesting things for us, such as working with files, mathematics and
some HTTP servings.

[Node.JS]: http://nodejs.org/

~

First of all I would like to describe testing environment (my laptop), and some
basics about testing.


--- 
title: Seems like async IO is the only way in Node.JS
category: development
tags: node.js, io, syscall, benchmark
date: 31/07/2011

I don't want to start a holywar, or any kind of flame. And if somebody can point
me out what I'm doing wrong, I'll be very thankfull, but for today I ralized
that I don't feel excited about [Node.JS] anymore. Right after previous post I
had a conversation with one friend of mine about Node.JS, asynchronous model and
alcohol. So here what we have done...

[Node.JS]: http://nodejs.org/

~

We were comparing _TCL_ (my friends favourite language), _Ruby_ (my favourite
language) and _Node.JS_. Tests were simply stupid - read file once, read file
multiple times. And speed testing was performed by `time (1)`. First of all,
here's our dummy file:

``` bash
$ dd if=/dev/zero of=/tmp/test bs=1M count=256
0+256 records in
0+256 records out
2058 bytes (2.1 kB) copied, 551.483 s, 0.0 kB/s
```

Also, I would like to mention my laptop's hardware a little bit:

* CPU: Dual core `Intel(R) Core(TM)2 CPU T5600 @ 1.83GHz` with 2MB cache
* RAM: 2GB

And some info about memory consumption on the start of tests:

``` bash
$ free
             total       used       free     shared    buffers     cached
Mem:       2066112     583332    1482780          0      84924     378216
-/+ buffers/cache:     120192    1945920
Swap:            0          0          0
```

```
$ sudo hdparm -tT /dev/sda2

/dev/sda2:
 Timing cached reads:   1678 MB in  2.00 seconds = 838.94 MB/sec
 Timing buffered disk reads: 102 MB in  3.00 seconds =  33.96 MB/sec
```


```
ixti@s300:/tmp$ uname -a
Linux s300 2.6.39-2-686-pae #1 SMP Tue Jul 5 03:48:49 UTC 2011 i686 GNU/Linux
ixti@s300:/tmp$ node -v
v0.4.9
ixti@s300:/tmp$ ruby -v
ruby 1.9.2p180 (2011-02-18 revision 30909) [i686-linux]
```


### Checking if file exists

```
$ time echo 'file exist /tmp/test' | tclsh8.5 > /dev/null

real    0m0.011s
user    0m0.004s
sys     0m0.004s


$ time ruby -e 'File::exists? "/tmp/test"' > /dev/null

real    0m0.011s
user    0m0.004s
sys     0m0.008s


$ time node -e 'require("path").existsSync("/tmp/test")' > /dev/null

real    0m0.068s
user    0m0.056s
sys     0m0.008s


$ time node -e 'require("path").exists("/tmp/test")' > /dev/null

real    0m0.069s
user    0m0.056s
sys     0m0.008s
```


### Reading file (once)

```
$ time echo 'set fd [open /tmp/test rb]; read $fd; close $fd' | tclsh8.5 > /dev/null

real    0m0.474s
user    0m0.056s
sys     0m0.416s


$ time ruby -e 'File.read "/tmp/test"' > /dev/null

real    0m0.621s
user    0m0.104s
sys     0m0.516s


$ time node -e 'require("fs").readFileSync("/tmp/test")' > /dev/null
FATAL ERROR: CALL_AND_RETRY_2 Allocation failed - process out of memory

real    0m23.171s
user    0m13.057s
sys     0m1.668s


$ time node -e 'require("fs").readFile("/tmp/test", function (err, data) {})' > /dev/null

real    0m1.483s
user    0m0.748s
sys     0m0.884s
```


### Reading file (10 times)

```
$ time echo 'for {set i 0} {$i < 10} {incr i} {set fd [open /tmp/test rb]; read $fd; close $fd}' | tclsh8.5 > /dev/null

real    0m4.877s
user    0m0.500s
sys     0m4.364s

$ time ruby -e '10.times { File.read "/tmp/test" }' > /dev/null

real    0m6.131s
user    0m0.956s
sys     0m5.168s


$ time node -e 'var i = 10; while (i--) require("fs").readFileSync("/tmp/test");' > /dev/null
FATAL ERROR: CALL_AND_RETRY_2 Allocation failed - process out of memory

real    0m48.785s
user    0m42.143s
sys     0m7.136s

$ time node -e 'var i = 10; while (i--) require("fs").readFile("/tmp/test");' > /dev/null
Killed

real    0m10.483s
user    0m5.300s
sys     0m3.832s
```
